/* DO NOT EDIT THIS FILE
 * - zuon_tokens.l (ZUON)
 * - Copyright: Prof. Kevin Andrea, George Mason University.  All Rights Reserved
 * - Date: Aug 2022
 */

%{
#include "zuon_grammar.tab.h"
#include "common_functions.h"
#include "limits.h"

char *p = NULL;
%}

%option noyywrap
%option always-interactive

AL [a-z]
AU [A-Z]
AA [a-zA-Z]
AN [a-zA-Z0-9_]

%%

print       { ECHOTTY("print"); return PRINT_T; }
display     { ECHOTTY("display");return DISPLAY_T; }
exit|quit   { ECHOTTY("%s", yytext);return EXIT_T; }
inf|INF     { ECHOTTY("%s", yytext);return INF_T; }
nan|NAN|NaN { ECHOTTY("%s", yytext);return NAN_T; }
"#".*"\n"  { ECHOTTY("%s", yytext); return EOL;}
{AA}{AN}*   { ECHOTTY("%s", yytext);
              yylval.strval = (char *)malloc(sizeof(char) * strlen(yytext)+1); 
              strcpy(yylval.strval, yytext); return VARIABLE;}
[0-9]+      { ECHOTTY("%s", yytext);strcpy(yylval.fpval.original, yytext);
              errno = 0;
              long result = 0;
              result = strtol(yytext, NULL, 10); 
              if(errno || result > INT_MAX || (-result) > INT_MAX) {
                yylval.fpval.whole = INT_MAX;
              }
              else {
                yylval.fpval.whole = strtol(yytext, NULL, 10); 
              }
              yylval.fpval.fraction = 0;
              yylval.fpval.precision = 1;
              return FLOAT; }
[0-9]+\.[0-9]+  { ECHOTTY("%s", yytext);
              strcpy(yylval.fpval.original, yytext);
              p = strtok(yytext, ".");
              errno = 0;
              long result = 0;
              result = strtol(yytext, NULL, 10); 
              if(errno || result > INT_MAX || (-result) > INT_MAX) {
                yylval.fpval.whole = INT_MAX;
              }
              else {
                yylval.fpval.whole = strtol(yytext, NULL, 10); 
              }
              p = strtok(NULL, "\n\0");
              char frac_limited[15] = {0};
              strncpy(frac_limited, p, 9);
              yylval.fpval.fraction = strtol(frac_limited, NULL, 10);
              yylval.fpval.precision = strlen(frac_limited);
              return FLOAT;}
\.[0-9]+  {   ECHOTTY("%s", yytext);
              yylval.fpval.whole = 0;
              p = strtok(yytext, ".");
              char frac_limited[15] = {0};
              strncpy(frac_limited, p, 9);
              yylval.fpval.fraction = strtol(frac_limited, NULL, 10);
              yylval.fpval.precision = strlen(frac_limited);
              return FLOAT;}
[\n]        { ECHOTTY("\n");
              return EOL; }
[-+()*=]    { ECHOTTY("%s", yytext);
              return *yytext; }

%%
